//*****************************************************************************
//*****************************************************************************
//  FILENAME: BaudClock.h
//   Version: 2.60, Updated on 2010/9/19 at 23:40:54
//  Generated by PSoC Designer 5.1.1875.0
//
//  DESCRIPTION: PWM8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2010. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef BaudClock_INCLUDE
#define BaudClock_INCLUDE

#include <m8c.h>

#pragma fastcall16 BaudClock_EnableInt
#pragma fastcall16 BaudClock_DisableInt
#pragma fastcall16 BaudClock_Start
#pragma fastcall16 BaudClock_Stop
#pragma fastcall16 BaudClock_bReadCounter              // Read  DR0
#pragma fastcall16 BaudClock_WritePeriod               // Write DR1
#pragma fastcall16 BaudClock_bReadPulseWidth           // Read  DR2
#pragma fastcall16 BaudClock_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bBaudClock_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bBaudClock_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the BaudClock API.
//-------------------------------------------------

extern void BaudClock_EnableInt(void);                        // Proxy Class 1
extern void BaudClock_DisableInt(void);                       // Proxy Class 1
extern void BaudClock_Start(void);                            // Proxy Class 1
extern void BaudClock_Stop(void);                             // Proxy Class 1
extern BYTE BaudClock_bReadCounter(void);                     // Proxy Class 2
extern void BaudClock_WritePeriod(BYTE bPeriod);              // Proxy Class 1
extern BYTE BaudClock_bReadPulseWidth(void);                  // Proxy Class 1
extern void BaudClock_WritePulseWidth(BYTE bPulseWidth);      // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bBaudClock_ReadCounter(void);            // Deprecated
extern BYTE bBaudClock_ReadPulseWidth(void);         // Deprecated


//--------------------------------------------------
// Constants for BaudClock API's.
//--------------------------------------------------

#define BaudClock_CONTROL_REG_START_BIT        ( 0x01 )
#define BaudClock_INT_REG_ADDR                 ( 0x0e1 )
#define BaudClock_INT_MASK                     ( 0x01 )


//--------------------------------------------------
// Constants for BaudClock user defined values
//--------------------------------------------------

#define BaudClock_PERIOD                       ( 0x33 )
#define BaudClock_PULSE_WIDTH                  ( 0x19 )


//-------------------------------------------------
// Register Addresses for BaudClock
//-------------------------------------------------

#pragma ioport  BaudClock_COUNTER_REG:  0x020              //DR0 Count register
BYTE            BaudClock_COUNTER_REG;
#pragma ioport  BaudClock_PERIOD_REG:   0x021              //DR1 Period register
BYTE            BaudClock_PERIOD_REG;
#pragma ioport  BaudClock_COMPARE_REG:  0x022              //DR2 Compare register
BYTE            BaudClock_COMPARE_REG;
#pragma ioport  BaudClock_CONTROL_REG:  0x023              //Control register
BYTE            BaudClock_CONTROL_REG;
#pragma ioport  BaudClock_FUNC_REG: 0x120                  //Function register
BYTE            BaudClock_FUNC_REG;
#pragma ioport  BaudClock_INPUT_REG:    0x121              //Input register
BYTE            BaudClock_INPUT_REG;
#pragma ioport  BaudClock_OUTPUT_REG:   0x122              //Output register
BYTE            BaudClock_OUTPUT_REG;
#pragma ioport  BaudClock_INT_REG:       0x0e1             //Interrupt Mask Register
BYTE            BaudClock_INT_REG;


//-------------------------------------------------
// BaudClock Macro 'Functions'
//-------------------------------------------------

#define BaudClock_Start_M \
   BaudClock_CONTROL_REG |=  BaudClock_CONTROL_REG_START_BIT

#define BaudClock_Stop_M  \
   BaudClock_CONTROL_REG &= ~BaudClock_CONTROL_REG_START_BIT

#define BaudClock_EnableInt_M   \
   M8C_EnableIntMask(BaudClock_INT_REG, BaudClock_INT_MASK)

#define BaudClock_DisableInt_M  \
   M8C_DisableIntMask(BaudClock_INT_REG, BaudClock_INT_MASK)

#endif
// end of file BaudClock.h
