;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME: VR_ADC.inc
;;  Version: 1.1, Updated on 2010/9/19 at 23:39:0
;;  Generated by PSoC Designer 5.1.1875.0
;;
;;  DESCRIPTION: Assembler declarations for the ADCINC A/D Converter
;;               User Module with a 1st-order modulator.
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress Semiconductor 2010. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

include "m8c.inc"
include "memory.inc"
;--------------------------------------------------
; Constants for VR_ADC API's.
;--------------------------------------------------

VR_ADC_OFF:                     equ 00h
VR_ADC_LOWPOWER:                equ 01h
VR_ADC_MEDPOWER:                equ 02h
VR_ADC_HIGHPOWER:               equ 03h

VR_ADC_bNUMBITS:                equ 08h
VR_ADC_NoAZ:                    equ 1
VR_ADC_SIGNED_DATA:             equ 0
VR_ADC_9_OR_MORE_BITS:          equ ((08h - 1)& 08h)
VR_ADC_8_OR_MORE_BITS:          equ ((08h )& 08h)
;--------------------------------------------------
; Register Address Constants for VR_ADC
;--------------------------------------------------
VR_ADC_ISR_MASK:                       equ 01h
VR_ADC_ISR_REG:                        equ 0e1h
VR_ADC_CLR_REG:                        equ (((VR_ADC_ISR_REG & 038h)/8)^0dfh)

VR_ADC_PWMdr0:                 equ 20h     ; Period reg
VR_ADC_PWMdr1:                 equ 21h     ; Down count reg
VR_ADC_PWMdr2:                 equ 22h     ; Compare reg
VR_ADC_PWMcr0:                 equ 23h     ; Control reg
VR_ADC_PWMfn:                  equ 20h     ; Function reg
VR_ADC_PWMsl:                  equ 21h     ; Input  select reg
VR_ADC_PWMos:                  equ 22h     ; Output select reg

VR_ADC_AtoDcr0:                equ 80h     ; SC Block Control Reg 0
VR_ADC_AtoDcr1:                equ 81h     ; SC Block Control Reg 1
VR_ADC_AtoDcr2:                equ 82h     ; SC Block Control Reg 2
VR_ADC_AtoDcr3:                equ 83h     ; SC Block Control Reg 3

HighByte: equ 0
LowByte:  equ 1

macro VR_ADC_fIsDataAvailable_M
   RAM_SETPAGE_CUR >VR_ADC_fStatus
   mov A,[VR_ADC_fStatus]
endm


macro VR_ADC_iGetData_M
   RAM_SETPAGE_CUR >VR_ADC_iResult
   mov X,[(VR_ADC_iResult + HighByte)]
   mov A,[(VR_ADC_iResult + LowByte)]
endm


macro VR_ADC_wGetData_M
   VR_ADC_iGetData_M
endm


macro VR_ADC_cGetData_M
   RAM_SETPAGE_CUR >VR_ADC_iResult
   mov A,[(VR_ADC_iResult + LowByte)]
endm


macro VR_ADC_bGetData_M
   VR_ADC_cGetData_M
endm


macro VR_ADC_fClearFlag_M
   RAM_SETPAGE_CUR >VR_ADC_fStatus
   mov A,[VR_ADC_fStatus]
   mov [VR_ADC_fStatus],00h
endm


macro VR_ADC_iClearFlagGetData_M
   RAM_SETPAGE_CUR >VR_ADC_fStatus
  .repeat:
      mov [VR_ADC_fStatus],00h
      mov X,[(VR_ADC_iResult + HighByte)]
      mov A,[(VR_ADC_iResult + LowByte)]
      cmp [VR_ADC_fStatus],00h
  .until: jnz .repeat
endm


macro VR_ADC_wClearFlagGetData_M
   VR_ADC_iClearFlagGetData_M
endm


macro VR_ADC_cClearFlagGetData_M
   RAM_SETPAGE_CUR >VR_ADC_fStatus
   mov [VR_ADC_fStatus],00h
   mov A,[(VR_ADC_iResult + LowByte)]
endm


macro VR_ADC_bClearFlagGetData_M
   VR_ADC_cClearFlagGetData_M
endm

macro VR_ADC_ENABLE_INTEGRATOR_M  
   and reg[VR_ADC_AtoDcr3],~10h
   IF VR_ADC_NoAZ
   and reg[VR_ADC_AtoDcr2],~20h
   ENDIF
endm


macro VR_ADC_RESET_INTEGRATOR_M  
   IF VR_ADC_NoAZ
   or  reg[VR_ADC_AtoDcr2],20h
   ENDIF
   or  reg[VR_ADC_AtoDcr3],10h
endm


macro VR_ADC_STARTADC_M  
   ;Enable PWM interrupt
   mov reg[VR_ADC_CLR_REG],~(VR_ADC_ISR_MASK)
   or  reg[VR_ADC_ISR_REG], (VR_ADC_ISR_MASK)
endm


macro VR_ADC_STOPADC_M
   ;Disable PWM interrupt  
   and reg[VR_ADC_ISR_REG],~(VR_ADC_ISR_MASK)
endm


macro VR_ADC_WritePulseWidth_M
   mov reg[VR_ADC_PWMdr2],A
endm

; end of file VR_ADC.inc
